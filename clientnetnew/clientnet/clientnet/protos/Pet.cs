// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Pet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol {

  /// <summary>Holder for reflection information generated from Pet.proto</summary>
  public static partial class PetReflection {

    #region Descriptor
    /// <summary>File descriptor for Pet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglQZXQucHJvdG8SCFByb3RvY29sIiwKEEMyU0NoYW5nZVBldE5hbWUSCgoC",
            "aWQYASACKAUSDAoEbmFtZRgCIAIoCSJsCg1TMkNQZXREYXRhQWRkEgoKAmhw",
            "GAEgAigFEgoKAmx2GAIgAigFEgsKA2F0axgDIAIoBRIMCgRtYXRrGAQgAigF",
            "EgsKA2RlZhgFIAIoBRIMCgRtZGVmGAYgAigFEg0KBXNwZWVkGAcgAigFInIK",
            "CVMyQ09uZVBldBIKCgJpZBgBIAIoBRILCgNzaWQYAiACKAUSDAoEbmFtZRgD",
            "IAIoCRILCgNleHAYBCACKAUSCgoCaHAYBSACKAUSCgoCbHYYBiACKAUSCwoD",
            "YXRrGAcgAigFEgwKBG1hdGsYCCACKAUiMAoJUzJDQWRkUGV0EiMKBmFkZHBl",
            "dBgBIAIoCzITLlByb3RvY29sLlMyQ09uZVBldCIvCgpTMkNNb3JlUGV0EiEK",
            "BHBldHMYASADKAsyEy5Qcm90b2NvbC5TMkNPbmVQZXQ="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SChangePetName), global::Protocol.C2SChangePetName.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CPetDataAdd), global::Protocol.S2CPetDataAdd.Parser, new[]{ "Hp", "Lv", "Atk", "Matk", "Def", "Mdef", "Speed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2COnePet), global::Protocol.S2COnePet.Parser, new[]{ "Id", "Sid", "Name", "Exp", "Hp", "Lv", "Atk", "Matk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CAddPet), global::Protocol.S2CAddPet.Parser, new[]{ "Addpet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CMorePet), global::Protocol.S2CMorePet.Parser, new[]{ "Pets" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///---------客户端到服务器---------------------------------------------------------
  ///C2S子协议号1:~请求修改宠物名字
  /// </summary>
  public sealed partial class C2SChangePetName : pb::IMessage<C2SChangePetName>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C2SChangePetName> _parser = new pb::MessageParser<C2SChangePetName>(() => new C2SChangePetName());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<C2SChangePetName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.PetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C2SChangePetName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C2SChangePetName(C2SChangePetName other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C2SChangePetName Clone() {
      return new C2SChangePetName(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    ///宠物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    ///宠物的新名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as C2SChangePetName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(C2SChangePetName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(C2SChangePetName other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///-----------------------------------------------
  ///---------服务器到客户端---------------------------------------------------------
  ///-------------s2c--------------------------------
  ///大协议号:34 宠物协议
  ///通用Message
  ///宠物升级或进化后等等增加的属性
  /// </summary>
  public sealed partial class S2CPetDataAdd : pb::IMessage<S2CPetDataAdd>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S2CPetDataAdd> _parser = new pb::MessageParser<S2CPetDataAdd>(() => new S2CPetDataAdd());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<S2CPetDataAdd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.PetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2CPetDataAdd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2CPetDataAdd(S2CPetDataAdd other) : this() {
      _hasBits0 = other._hasBits0;
      hp_ = other.hp_;
      lv_ = other.lv_;
      atk_ = other.atk_;
      matk_ = other.matk_;
      def_ = other.def_;
      mdef_ = other.mdef_;
      speed_ = other.speed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2CPetDataAdd Clone() {
      return new S2CPetDataAdd(this);
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 1;
    private readonly static int HpDefaultValue = 0;

    private int hp_;
    /// <summary>
    /// HP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hp {
      get { if ((_hasBits0 & 1) != 0) { return hp_; } else { return HpDefaultValue; } }
      set {
        _hasBits0 |= 1;
        hp_ = value;
      }
    }
    /// <summary>Gets whether the "hp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "hp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "lv" field.</summary>
    public const int LvFieldNumber = 2;
    private readonly static int LvDefaultValue = 0;

    private int lv_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Lv {
      get { if ((_hasBits0 & 2) != 0) { return lv_; } else { return LvDefaultValue; } }
      set {
        _hasBits0 |= 2;
        lv_ = value;
      }
    }
    /// <summary>Gets whether the "lv" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLv {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "lv" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLv() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "atk" field.</summary>
    public const int AtkFieldNumber = 3;
    private readonly static int AtkDefaultValue = 0;

    private int atk_;
    /// <summary>
    /// 物攻
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Atk {
      get { if ((_hasBits0 & 4) != 0) { return atk_; } else { return AtkDefaultValue; } }
      set {
        _hasBits0 |= 4;
        atk_ = value;
      }
    }
    /// <summary>Gets whether the "atk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAtk {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "atk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAtk() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "matk" field.</summary>
    public const int MatkFieldNumber = 4;
    private readonly static int MatkDefaultValue = 0;

    private int matk_;
    /// <summary>
    /// 法攻
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Matk {
      get { if ((_hasBits0 & 8) != 0) { return matk_; } else { return MatkDefaultValue; } }
      set {
        _hasBits0 |= 8;
        matk_ = value;
      }
    }
    /// <summary>Gets whether the "matk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMatk {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "matk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMatk() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "def" field.</summary>
    public const int DefFieldNumber = 5;
    private readonly static int DefDefaultValue = 0;

    private int def_;
    /// <summary>
    /// 物防
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Def {
      get { if ((_hasBits0 & 16) != 0) { return def_; } else { return DefDefaultValue; } }
      set {
        _hasBits0 |= 16;
        def_ = value;
      }
    }
    /// <summary>Gets whether the "def" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDef {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "def" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDef() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "mdef" field.</summary>
    public const int MdefFieldNumber = 6;
    private readonly static int MdefDefaultValue = 0;

    private int mdef_;
    /// <summary>
    /// 法防
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mdef {
      get { if ((_hasBits0 & 32) != 0) { return mdef_; } else { return MdefDefaultValue; } }
      set {
        _hasBits0 |= 32;
        mdef_ = value;
      }
    }
    /// <summary>Gets whether the "mdef" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMdef {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "mdef" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMdef() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 7;
    private readonly static int SpeedDefaultValue = 0;

    private int speed_;
    /// <summary>
    /// 速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Speed {
      get { if ((_hasBits0 & 64) != 0) { return speed_; } else { return SpeedDefaultValue; } }
      set {
        _hasBits0 |= 64;
        speed_ = value;
      }
    }
    /// <summary>Gets whether the "speed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpeed {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "speed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpeed() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as S2CPetDataAdd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(S2CPetDataAdd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hp != other.Hp) return false;
      if (Lv != other.Lv) return false;
      if (Atk != other.Atk) return false;
      if (Matk != other.Matk) return false;
      if (Def != other.Def) return false;
      if (Mdef != other.Mdef) return false;
      if (Speed != other.Speed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHp) hash ^= Hp.GetHashCode();
      if (HasLv) hash ^= Lv.GetHashCode();
      if (HasAtk) hash ^= Atk.GetHashCode();
      if (HasMatk) hash ^= Matk.GetHashCode();
      if (HasDef) hash ^= Def.GetHashCode();
      if (HasMdef) hash ^= Mdef.GetHashCode();
      if (HasSpeed) hash ^= Speed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHp) {
        output.WriteRawTag(8);
        output.WriteInt32(Hp);
      }
      if (HasLv) {
        output.WriteRawTag(16);
        output.WriteInt32(Lv);
      }
      if (HasAtk) {
        output.WriteRawTag(24);
        output.WriteInt32(Atk);
      }
      if (HasMatk) {
        output.WriteRawTag(32);
        output.WriteInt32(Matk);
      }
      if (HasDef) {
        output.WriteRawTag(40);
        output.WriteInt32(Def);
      }
      if (HasMdef) {
        output.WriteRawTag(48);
        output.WriteInt32(Mdef);
      }
      if (HasSpeed) {
        output.WriteRawTag(56);
        output.WriteInt32(Speed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHp) {
        output.WriteRawTag(8);
        output.WriteInt32(Hp);
      }
      if (HasLv) {
        output.WriteRawTag(16);
        output.WriteInt32(Lv);
      }
      if (HasAtk) {
        output.WriteRawTag(24);
        output.WriteInt32(Atk);
      }
      if (HasMatk) {
        output.WriteRawTag(32);
        output.WriteInt32(Matk);
      }
      if (HasDef) {
        output.WriteRawTag(40);
        output.WriteInt32(Def);
      }
      if (HasMdef) {
        output.WriteRawTag(48);
        output.WriteInt32(Mdef);
      }
      if (HasSpeed) {
        output.WriteRawTag(56);
        output.WriteInt32(Speed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (HasLv) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv);
      }
      if (HasAtk) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Atk);
      }
      if (HasMatk) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Matk);
      }
      if (HasDef) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Def);
      }
      if (HasMdef) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mdef);
      }
      if (HasSpeed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Speed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(S2CPetDataAdd other) {
      if (other == null) {
        return;
      }
      if (other.HasHp) {
        Hp = other.Hp;
      }
      if (other.HasLv) {
        Lv = other.Lv;
      }
      if (other.HasAtk) {
        Atk = other.Atk;
      }
      if (other.HasMatk) {
        Matk = other.Matk;
      }
      if (other.HasDef) {
        Def = other.Def;
      }
      if (other.HasMdef) {
        Mdef = other.Mdef;
      }
      if (other.HasSpeed) {
        Speed = other.Speed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Hp = input.ReadInt32();
            break;
          }
          case 16: {
            Lv = input.ReadInt32();
            break;
          }
          case 24: {
            Atk = input.ReadInt32();
            break;
          }
          case 32: {
            Matk = input.ReadInt32();
            break;
          }
          case 40: {
            Def = input.ReadInt32();
            break;
          }
          case 48: {
            Mdef = input.ReadInt32();
            break;
          }
          case 56: {
            Speed = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Hp = input.ReadInt32();
            break;
          }
          case 16: {
            Lv = input.ReadInt32();
            break;
          }
          case 24: {
            Atk = input.ReadInt32();
            break;
          }
          case 32: {
            Matk = input.ReadInt32();
            break;
          }
          case 40: {
            Def = input.ReadInt32();
            break;
          }
          case 48: {
            Mdef = input.ReadInt32();
            break;
          }
          case 56: {
            Speed = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///s2c子协议号1--发送一个宠物
  /// </summary>
  public sealed partial class S2COnePet : pb::IMessage<S2COnePet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S2COnePet> _parser = new pb::MessageParser<S2COnePet>(() => new S2COnePet());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<S2COnePet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.PetReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2COnePet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2COnePet(S2COnePet other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      sid_ = other.sid_;
      name_ = other.name_;
      exp_ = other.exp_;
      hp_ = other.hp_;
      lv_ = other.lv_;
      atk_ = other.atk_;
      matk_ = other.matk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2COnePet Clone() {
      return new S2COnePet(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    ///宠物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sid" field.</summary>
    public const int SidFieldNumber = 2;
    private readonly static int SidDefaultValue = 0;

    private int sid_;
    /// <summary>
    ///宠物造型ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Sid {
      get { if ((_hasBits0 & 2) != 0) { return sid_; } else { return SidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sid_ = value;
      }
    }
    /// <summary>Gets whether the "sid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    ///宠物名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 4;
    private readonly static int ExpDefaultValue = 0;

    private int exp_;
    /// <summary>
    ///当前经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Exp {
      get { if ((_hasBits0 & 4) != 0) { return exp_; } else { return ExpDefaultValue; } }
      set {
        _hasBits0 |= 4;
        exp_ = value;
      }
    }
    /// <summary>Gets whether the "exp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "exp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExp() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 5;
    private readonly static int HpDefaultValue = 0;

    private int hp_;
    /// <summary>
    /// HP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hp {
      get { if ((_hasBits0 & 8) != 0) { return hp_; } else { return HpDefaultValue; } }
      set {
        _hasBits0 |= 8;
        hp_ = value;
      }
    }
    /// <summary>Gets whether the "hp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "hp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHp() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "lv" field.</summary>
    public const int LvFieldNumber = 6;
    private readonly static int LvDefaultValue = 0;

    private int lv_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Lv {
      get { if ((_hasBits0 & 16) != 0) { return lv_; } else { return LvDefaultValue; } }
      set {
        _hasBits0 |= 16;
        lv_ = value;
      }
    }
    /// <summary>Gets whether the "lv" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLv {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "lv" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLv() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "atk" field.</summary>
    public const int AtkFieldNumber = 7;
    private readonly static int AtkDefaultValue = 0;

    private int atk_;
    /// <summary>
    /// 物攻
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Atk {
      get { if ((_hasBits0 & 32) != 0) { return atk_; } else { return AtkDefaultValue; } }
      set {
        _hasBits0 |= 32;
        atk_ = value;
      }
    }
    /// <summary>Gets whether the "atk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAtk {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "atk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAtk() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "matk" field.</summary>
    public const int MatkFieldNumber = 8;
    private readonly static int MatkDefaultValue = 0;

    private int matk_;
    /// <summary>
    /// 法攻
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Matk {
      get { if ((_hasBits0 & 64) != 0) { return matk_; } else { return MatkDefaultValue; } }
      set {
        _hasBits0 |= 64;
        matk_ = value;
      }
    }
    /// <summary>Gets whether the "matk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMatk {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "matk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMatk() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as S2COnePet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(S2COnePet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Sid != other.Sid) return false;
      if (Name != other.Name) return false;
      if (Exp != other.Exp) return false;
      if (Hp != other.Hp) return false;
      if (Lv != other.Lv) return false;
      if (Atk != other.Atk) return false;
      if (Matk != other.Matk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasSid) hash ^= Sid.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasExp) hash ^= Exp.GetHashCode();
      if (HasHp) hash ^= Hp.GetHashCode();
      if (HasLv) hash ^= Lv.GetHashCode();
      if (HasAtk) hash ^= Atk.GetHashCode();
      if (HasMatk) hash ^= Matk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasSid) {
        output.WriteRawTag(16);
        output.WriteInt32(Sid);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasExp) {
        output.WriteRawTag(32);
        output.WriteInt32(Exp);
      }
      if (HasHp) {
        output.WriteRawTag(40);
        output.WriteInt32(Hp);
      }
      if (HasLv) {
        output.WriteRawTag(48);
        output.WriteInt32(Lv);
      }
      if (HasAtk) {
        output.WriteRawTag(56);
        output.WriteInt32(Atk);
      }
      if (HasMatk) {
        output.WriteRawTag(64);
        output.WriteInt32(Matk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasSid) {
        output.WriteRawTag(16);
        output.WriteInt32(Sid);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasExp) {
        output.WriteRawTag(32);
        output.WriteInt32(Exp);
      }
      if (HasHp) {
        output.WriteRawTag(40);
        output.WriteInt32(Hp);
      }
      if (HasLv) {
        output.WriteRawTag(48);
        output.WriteInt32(Lv);
      }
      if (HasAtk) {
        output.WriteRawTag(56);
        output.WriteInt32(Atk);
      }
      if (HasMatk) {
        output.WriteRawTag(64);
        output.WriteInt32(Matk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasSid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sid);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasExp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (HasHp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (HasLv) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv);
      }
      if (HasAtk) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Atk);
      }
      if (HasMatk) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Matk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(S2COnePet other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasSid) {
        Sid = other.Sid;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasExp) {
        Exp = other.Exp;
      }
      if (other.HasHp) {
        Hp = other.Hp;
      }
      if (other.HasLv) {
        Lv = other.Lv;
      }
      if (other.HasAtk) {
        Atk = other.Atk;
      }
      if (other.HasMatk) {
        Matk = other.Matk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Sid = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Exp = input.ReadInt32();
            break;
          }
          case 40: {
            Hp = input.ReadInt32();
            break;
          }
          case 48: {
            Lv = input.ReadInt32();
            break;
          }
          case 56: {
            Atk = input.ReadInt32();
            break;
          }
          case 64: {
            Matk = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Sid = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Exp = input.ReadInt32();
            break;
          }
          case 40: {
            Hp = input.ReadInt32();
            break;
          }
          case 48: {
            Lv = input.ReadInt32();
            break;
          }
          case 56: {
            Atk = input.ReadInt32();
            break;
          }
          case 64: {
            Matk = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///S2C子协议号2,添加一个宠物
  /// </summary>
  public sealed partial class S2CAddPet : pb::IMessage<S2CAddPet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S2CAddPet> _parser = new pb::MessageParser<S2CAddPet>(() => new S2CAddPet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<S2CAddPet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.PetReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2CAddPet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2CAddPet(S2CAddPet other) : this() {
      addpet_ = other.addpet_ != null ? other.addpet_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2CAddPet Clone() {
      return new S2CAddPet(this);
    }

    /// <summary>Field number for the "addpet" field.</summary>
    public const int AddpetFieldNumber = 1;
    private global::Protocol.S2COnePet addpet_;
    /// <summary>
    ///去解一个
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Protocol.S2COnePet Addpet {
      get { return addpet_; }
      set {
        addpet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as S2CAddPet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(S2CAddPet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Addpet, other.Addpet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (addpet_ != null) hash ^= Addpet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (addpet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Addpet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (addpet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Addpet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (addpet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Addpet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(S2CAddPet other) {
      if (other == null) {
        return;
      }
      if (other.addpet_ != null) {
        if (addpet_ == null) {
          Addpet = new global::Protocol.S2COnePet();
        }
        Addpet.MergeFrom(other.Addpet);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (addpet_ == null) {
              Addpet = new global::Protocol.S2COnePet();
            }
            input.ReadMessage(Addpet);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (addpet_ == null) {
              Addpet = new global::Protocol.S2COnePet();
            }
            input.ReadMessage(Addpet);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///S2C子协议3,一次发送多个宠物
  /// </summary>
  public sealed partial class S2CMorePet : pb::IMessage<S2CMorePet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S2CMorePet> _parser = new pb::MessageParser<S2CMorePet>(() => new S2CMorePet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<S2CMorePet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.PetReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2CMorePet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2CMorePet(S2CMorePet other) : this() {
      pets_ = other.pets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S2CMorePet Clone() {
      return new S2CMorePet(this);
    }

    /// <summary>Field number for the "pets" field.</summary>
    public const int PetsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.S2COnePet> _repeated_pets_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.S2COnePet.Parser);
    private readonly pbc::RepeatedField<global::Protocol.S2COnePet> pets_ = new pbc::RepeatedField<global::Protocol.S2COnePet>();
    /// <summary>
    ///去解多个
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Protocol.S2COnePet> Pets {
      get { return pets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as S2CMorePet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(S2CMorePet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pets_.Equals(other.pets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      pets_.WriteTo(output, _repeated_pets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      pets_.WriteTo(ref output, _repeated_pets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += pets_.CalculateSize(_repeated_pets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(S2CMorePet other) {
      if (other == null) {
        return;
      }
      pets_.Add(other.pets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pets_.AddEntriesFrom(input, _repeated_pets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            pets_.AddEntriesFrom(ref input, _repeated_pets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
